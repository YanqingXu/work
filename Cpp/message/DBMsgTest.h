//
//Generated by lua
//2009-2012	(C) XianFeng Inc. Reserved
//

#ifndef _DB_MSG_TEST_H_INCLUDED
#define _DB_MSG_TEST_H_INCLUDED

#include "category.h"
#include "common/MessageEx.h"

class MsgDBChangeCareer : public MessageEx
{
public:
	enum { Category = MSG_CATEGORY_DB_TEST, Id = 1 };

	MsgDBChangeCareer() :
		MessageEx(Category, Id)
	{
		pid = 0;
		cid = 0;
	}

	virtual const char *getName() const
	{
		return "MsgDBChangeCareer";
	}

	virtual bool canSendToCrossFromClient() const
	{
		return false;
	}

	virtual int getSalt() const
	{
		return pid;
	}

	virtual bool getSendBack() const
	{
		return true;
	}

	virtual size_t getLength() const
	{
		return __super::getLength() + 8;
	}

	virtual bool serialize(ByteStream &s) const
	{
		__super::serialize(s);
		s << pid;
		s << cid;
		return true;
	}

	virtual bool unserialize(ByteStream &s)
	{
		__super::unserialize(s);
		s >> pid;
		s >> cid;
		return true;
	}

	virtual void push(lua_State *L) const
	{
		lua::newtable(lua::L);
		lua::settable(L, -1, "pid", pid);
		lua::settable(L, -1, "cid", cid);
	}

	virtual void dump(DumpBuffer &buffer)
	{
		__super::dump(buffer);
		buffer << ",pid=" << pid;
		buffer << ",cid=" << cid;
	}

public:
	int pid;
	int cid;
};

#endif	//_DB_MSG_TEST_H_INCLUDED
