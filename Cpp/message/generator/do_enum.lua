require 'os'

local file = io.open("../../../bin/script/definition.lua", "w")
if not file then
	print("Failed to open output file: definition.lua")
	return
else
	file:write([[
--
--	This file is generated by LUA
--
	]])
end

local function export_enum(filename)
	--打开文件
	local ifile = io.open(filename, "r")
	if not ifile then
		print("failed to open file : ", filename)
		return
	end

	--读取文件所有内容
	local source = ifile:read("*all")

	--关闭文件
	ifile:close()

	local pattern = "enum%s*([%w_%d]+)%s*{(.-)}"

	local init = 1;
	while true do
		local beg_pos, end_pos, name, contents = source:find(pattern, init)
		if not beg_pos then
			break
		end
		
		if name ~= "EntityScope" and name ~= "SceneObstacleFlags" then
			if not _G[name] then
				_G[name] = {}
			end

			contents = contents:gsub("//.-\n", "")

			local value = -1
			for k, v in contents:gfind("([%w_%d]+)%s*=?%s*([-%d]*)%s*,") do
				if v and v~="" then
					value = tonumber(v)
				else
					value = value + 1
				end
				local nsv = {}
				nsv.k = tostring(k)
				nsv.v = value
				table.insert(_G[name], nsv)
			end

			
			file:write("\n\n")
			file:write("--\n")
			file:write("-- ", name, " \n")
			file:write("--\n")

			for _, v in ipairs(_G[name]) do
				file:write(v.k, " = ", v.v ,"\n")
			end
		end
		
		init = end_pos + 1
	end
end

export_enum("../category.h")
export_enum("../definition.h")

file:close()
