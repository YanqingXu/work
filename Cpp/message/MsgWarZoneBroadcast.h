//
//Generated by lua
//2009-2012	(C) XianFeng Inc. Reserved
//

#ifndef _MSG_WAR_ZONE_BROADCAST_H_INCLUDED
#define _MSG_WAR_ZONE_BROADCAST_H_INCLUDED

#include "category.h"
#include "common/Message.h"

class MsgAddNiceConsignmentNotify : public Message
{
public:
	enum { Category = MSG_CATEGORY_WAR_ZONE_BROADCAST, Id = 1 };

	MsgAddNiceConsignmentNotify() :
		Message(Category, Id)
	{
		sellerPid = 0;
		cid = 0;
		sid = 0;
	}

	virtual const char *getName() const
	{
		return "MsgAddNiceConsignmentNotify";
	}

	virtual bool canSendToCrossFromClient() const
	{
		return false;
	}

	virtual size_t getLength() const
	{
		return 12;
	}

	virtual bool serialize(ByteStream &s) const
	{
		s << sellerPid;
		s << cid;
		s << sid;
		return true;
	}

	virtual bool unserialize(ByteStream &s)
	{
		s >> sellerPid;
		s >> cid;
		s >> sid;
		return true;
	}

	virtual void push(lua_State *L) const
	{
		lua::newtable(lua::L);
		lua::settable(L, -1, "sellerPid", sellerPid);
		lua::settable(L, -1, "cid", cid);
		lua::settable(L, -1, "sid", sid);
	}

	virtual void dump(DumpBuffer &buffer)
	{
		buffer << "sellerPid=" << sellerPid;
		buffer << ",cid=" << cid;
		buffer << ",sid=" << sid;
	}

public:
	int sellerPid;
	int cid;
	int sid;
};

class MsgCrossSyncFloatNoticeNotify : public Message
{
public:
	enum { Category = MSG_CATEGORY_WAR_ZONE_BROADCAST, Id = 2 };

	MsgCrossSyncFloatNoticeNotify() :
		Message(Category, Id)
	{
		showflag = 0;
	}

	virtual const char *getName() const
	{
		return "MsgCrossSyncFloatNoticeNotify";
	}

	virtual bool canSendToCrossFromClient() const
	{
		return false;
	}

	virtual size_t getLength() const
	{
		size_t length = 4;
		length += sizeof(short) + basestring.size();
		length += sizeof(short) + TouchID.size();
		return length;
	}

	virtual bool serialize(ByteStream &s) const
	{
		s << basestring;
		s << showflag;
		s << TouchID;
		return true;
	}

	virtual bool unserialize(ByteStream &s)
	{
		s >> basestring;
		s >> showflag;
		s >> TouchID;
		return true;
	}

	virtual void push(lua_State *L) const
	{
		lua::newtable(lua::L);
		lua::settable(L, -1, "basestring", basestring);
		lua::settable(L, -1, "showflag", showflag);
		lua::settable(L, -1, "TouchID", TouchID);
	}

	virtual void dump(DumpBuffer &buffer)
	{
		buffer << "basestring=" << basestring;
		buffer << ",showflag=" << showflag;
		buffer << ",TouchID=" << TouchID;
	}

public:
	std::string basestring;
	int showflag;
	std::string TouchID;
};

#endif	//_MSG_WAR_ZONE_BROADCAST_H_INCLUDED
